<launch>
    <!-- TF for world-->
    <!-- 统一mavros发布的map系与world系 -->
    <node pkg="tf" type="static_transform_publisher" name="tf_world_map"
          args="0 0 0 0 0 0 world map 100"/>

    <!-- ORB_SLAM的地图坐标系与map坐标系之间的转换关系 -->
    <node pkg="tf" type="static_transform_publisher" name="tf_slam2map"
          args="0 0 0 0 0 0 map map_slam 100"/>

    <!-- Ros transformation -->
    <node pkg="tf" type="static_transform_publisher" name="tf_local_origin"
          args="0 0 0 0 0 0 map odom 10"/>

	<!-- run the laser_to_pointcloud -->
    <node pkg="prometheus_plan_manage" type="laser_to_pointcloud.py" name="laser_to_pointcloud" >
    </node>

    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <param name="resolution" value="0.05" />
        <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
        <param name="frame_id" type="string" value="map" />
        <!-- maximum range to integrate (speedup!) -->
        <param name="sensor_model/max_range" value="5.0" />
        <!-- data source to integrate (PointCloud2) -->
        <remap from="cloud_in" to="/prometheus/sensors/3Dlidar_scan" />
    </node>

    <!-- 启动rtabmap_ros建图 -->
    <include file="$(find rtabmap_ros)/launch/rtabmap.launch">
        <arg name="rtabmap_args"       value="--delete_db_on_start"/>
        <arg name="frame_id"           value="base_link"/>
        <arg name="visual_odometry"    value="false"/>
        <!-- RGB-D related topics -->
        <arg name="approx_sync"         value="true"/>
        <arg name="rgb_topic"          value="/camera/color/image_raw"/>
        <arg name="depth_topic"        value="/camera/depth/image_raw"/>
        <arg name="camera_info_topic"  value="/camera/color/camera_info"/>
        <arg name="odom_topic"         value="/prometheus/drone_odom"/>
        <!-- 发布地图的坐标系 -->
        <arg name="map_frame_id"       value="map"/>
        <!--visualization-->
        <arg name="rtabmapviz"         value="false"/>
        <arg name="rviz"               value="false"/>
    </include>

    <!-- obstacle.world 真实点云 -->
<!--    <node pkg="prometheus_slam" type="pc2_publisher_node" name="pc2_publisher_node" output="screen">-->
<!--        <param name="pcd_path" type="string" value="$(find prometheus_gazebo)/maps/obstacle.pcd" />-->
<!--    </node>-->
</launch>
