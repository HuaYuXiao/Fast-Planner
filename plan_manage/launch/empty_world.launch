<launch>
    <!-- 启动Gazebo -->
    <!-- Gazebo configs -->
    <arg name="gui" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="paused" default="false"/>
    <arg name="respawn_gazebo" default="false"/>
    <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="world_name" default="$(find prometheus_plan_manage)/world/prometheus_logo.world"/>
<!--    <arg name="world_name" default="$(find uav_simulation)/world/GFKD.world"/>-->
    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="use_sim_time" default="true"/>
    <arg name="extra_gazebo_args" default=""/>
    <arg name="recording" default="false"/>
    <!-- Note that 'headless' is currently non-functional.  See gazebo_ros_pkgs issue #491 (-r arg does not disable
         rendering, but instead enables recording). The arg definition has been left here to prevent breaking downstream
         launch files, but it does nothing. -->
    <arg name="headless" default="false"/>
    <arg name="physics" default="ode"/>
    <arg name="output" default="screen"/>
    <arg name="use_clock_frequency" default="false"/>
    <arg name="pub_clock_frequency" default="100"/>
    <arg name="enable_ros_network" default="true" />
    <arg name="server_required" default="false"/>
    <arg name="gui_required" default="false"/>
    <arg name="sdf" default="$(find prometheus_gazebo)/amov_models/p450/p450.sdf"/>
    <arg name="model" default="p450"/>
    <!-- Spawn vehicle model -->
    <!-- https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model -->
    <!-- 初始位置 -->
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.2"/>
    <arg name="R" default="0.0"/>
    <arg name="P" default="0.0"/>
    <arg name="Y" default="0.0"/>

    <!-- set use_sim_time flag -->
    <param name="use_sim_time" value="$(arg use_sim_time)"/>

    <!-- set command arguments -->
    <arg unless="$(arg paused)" name="command_arg1" value=""/>
    <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
    <arg unless="$(arg recording)" name="command_arg2" value=""/>
    <arg     if="$(arg recording)" name="command_arg2" value="-r"/>
    <arg unless="$(arg verbose)" name="command_arg3" value=""/>
    <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
    <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
    <arg     if="$(arg debug)" name="script_type" value="debug"/>

    <!-- start gazebo server-->
    <group if="$(arg use_clock_frequency)">
        <param name="gazebo/pub_clock_frequency" value="$(arg pub_clock_frequency)" />
    </group>

    <group>
        <param name="gazebo/enable_ros_network" value="$(arg enable_ros_network)" />
    </group>

<!--    <node pkg="gazebo_ros" name="gazebo" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="$(arg output)"-->
<!--          args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name)"-->
<!--          required="$(arg server_required)" />-->

    <node pkg="gazebo_ros" name="gazebo" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="$(arg output)"
          args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name)"
          required="$(arg server_required)">
    </node>

    <!-- start gazebo client -->
    <group if="$(arg gui)">
        <node pkg="gazebo_ros" name="gazebo_gui" type="gzclient" respawn="false" output="$(arg output)" args="$(arg command_arg3)"
              required="$(arg gui_required)"/>
    </group>
</launch>