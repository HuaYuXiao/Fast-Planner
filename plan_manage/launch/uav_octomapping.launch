<launch>
    <!-- TF for world-->
    <!-- 统一mavros发布的map系与world系 -->
    <node pkg="tf" type="static_transform_publisher" name="tf_world_map"
          args="0 0 0 0 0 0 world map 100"/>

    <!-- ORB_SLAM的地图坐标系与map坐标系之间的转换关系 -->
    <node pkg="tf" type="static_transform_publisher" name="tf_slam2map"
          args="0 0 0 0 0 0 map map_slam 100"/>

    <!-- Ros transformation -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="tf_local_origin"
          args="0 0 0 0 0 0 map odom 10"/> -->

    <!-- TF for 3D lidar-->
    <!-- 3Dlidar_link是3D激光雷达坐标系 -->
    <!-- 机体系与3Dlidar_link的坐标转换关系见 amov_solo_3Dlidar.sdf -->
    <node pkg="tf" type="static_transform_publisher" name="tf_3Dlidar"
          args="0 0 0.15 0 0 0 base_link 3Dlidar_link 100"/>

    <!-- TF for 2D lidar-->
    <!-- 2Dlidar_link是2D激光雷达坐标系 -->
    <!-- 机体系与2Dlidar_link的坐标转换关系见 P300_2Dlidar.sdf -->
    <node pkg="tf" type="static_transform_publisher" name="tf_2Dlidar"
          args="0 0 0.2 0 0 0 base_link lidar_link 100"/>

    <!-- TF for realsense_camera-->
    <!-- realsense_camera_link是D435i坐标系 -->
    <!-- 机体系与realsense_camera_link的坐标转换关系见 P300_D435i.sdf -->
    <node pkg="tf" type="static_transform_publisher" name="tf_realsense_camera"
          args="0.2 0 -0.1 -1.57 0 -1.57 base_link realsense_camera_link 100"/>

	<!-- run the laser_to_pointcloud -->
    <node pkg="prometheus_plan_manage" type="laser_to_pointcloud.py" name="laser_to_pointcloud" >
    </node>

    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <param name="resolution" value="0.05" />
        <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
        <param name="frame_id" type="string" value="map" />
        <!-- maximum range to integrate (speedup!) -->
        <param name="sensor_model/max_range" value="5.0" />
        <!-- data source to integrate (PointCloud2) -->
        <remap from="cloud_in" to="/prometheus/sensors/pcl2" />
    </node>

    <!-- obstacle.world 真实点云 -->
<!--    <node pkg="prometheus_slam" type="pc2_publisher_node" name="pc2_publisher_node" output="screen">-->
<!--        <param name="pcd_path" type="string" value="$(find prometheus_gazebo)/maps/obstacle.pcd" />-->
<!--    </node>-->
</launch>
